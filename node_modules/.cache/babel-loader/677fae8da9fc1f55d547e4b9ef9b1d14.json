{"ast":null,"code":"var _jsxFileName = \"/Users/hettychin/Desktop/UCBerkExtBootcamp2019/HW14/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './components/navbar';\nimport Header from './components/header';\nimport Wrapper from './components/wrapper';\nimport Card from './components/card';\nimport Footer from './components/footer';\nimport characters from './characters.json';\nimport './App.css';\nimport './styles/main.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0 // create an array to shuffle cards from https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n\n    };\n\n    this.shuffle = array => {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n\n    this.characterClicked = event => {\n      this.setState({\n        // shuffle cards\n        characters: this.shuffle(characters),\n        // increases this.state by 1\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      count: this.state.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      classNAme: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, characters.map(character => React.createElement(Card, {\n      image: character.image,\n      name: character.name,\n      characterClicked: this.characterClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hettychin/Desktop/UCBerkExtBootcamp2019/HW14/clicky-game/src/App.js"],"names":["React","Component","Navbar","Header","Wrapper","Card","Footer","characters","App","state","count","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","characterClicked","event","setState","render","map","character","image","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,WAAP;AACA,OAAO,mBAAP;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACNC,MAAAA,KAAK,EAAE,CADD,CAGR;;AAHQ,KAFkB;;AAAA,SAM1BC,OAN0B,GAMfC,KAAD,IAAW;AACnB,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,UAAiCC,cAAjC;AAAA,UAAiDC,WAAjD,CADmB,CAGnB;;AACA,aAAO,MAAMH,YAAb,EAA2B;AAEzB;AACAG,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,QAAAA,YAAY,IAAI,CAAhB,CAJyB,CAMzB;;AACAE,QAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,QAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,aAAOH,KAAP;AACD,KAvByB;;AAAA,SA0B1BQ,gBA1B0B,GA0BPC,KAAK,IAAI;AAC1B,WAAKC,QAAL,CACE;AACE;AACAf,QAAAA,UAAU,EAAE,KAAKI,OAAL,CAAaJ,UAAb,CAFd;AAGE;AACAG,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAJ5B,OADF;AAQD,KAnCyB;AAAA;;AAqC1Ba,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,UAAU,CAACiB,GAAX,CAAeC,SAAS,IACvB,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEA,SAAS,CAACC,KADnB;AAEE,MAAA,IAAI,EAAED,SAAS,CAACE,IAFlB;AAEuB,MAAA,gBAAgB,EAAE,KAAKP,gBAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,CALF,EAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD;;AAzDyB;;AA4D5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from './components/navbar'\nimport Header from './components/header'\nimport Wrapper from './components/wrapper'\nimport Card from './components/card'\nimport Footer from './components/footer'\nimport characters from './characters.json'\nimport './App.css'\nimport './styles/main.css'\n\nclass App extends Component {\n  // setting the state\n  state = {\n    count: 0\n  }\n  // create an array to shuffle cards from https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n  shuffle = (array) => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  \n  characterClicked = event => {\n    this.setState(\n      { \n        // shuffle cards\n        characters: this.shuffle(characters),\n        // increases this.state by 1\n        count: this.state.count + 1\n      }\n    )\n  }\n\n  render () {\n    return (\n      <div>\n        <Navbar \n          count={this.state.count}\n        />\n        <Header />\n        <Wrapper>\n          <main classNAme='container'>\n            {characters.map(character => (\n              <Card\n                image={character.image}\n                name={character.name}characterClicked={this.characterClicked}/>\n            ))}\n          </main>\n        </Wrapper>\n          \n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}